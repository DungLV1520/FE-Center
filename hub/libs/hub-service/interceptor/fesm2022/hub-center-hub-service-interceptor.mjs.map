{"version":3,"file":"hub-center-hub-service-interceptor.mjs","sources":["../../../../../libs/hub-service/interceptor/src/lib/error.interceptor.ts","../../../../../libs/hub-service/interceptor/src/lib/jwt.interceptor.ts","../../../../../libs/hub-service/interceptor/src/hub-center-hub-service-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n} from '@angular/common/http';\nimport { catchError, Observable, tap, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private router: Router) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          if (event.body.result.ok === false) {\n            throw new Error(event?.body?.result?.message);\n          }\n        }\n      }),\n      catchError((err) => {\n        if (err.status === 401) {\n          this.router.navigate(['/login']);\n        }\n\n        return throwError(err.error.result.message);\n      })\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n  LocalStorageService,\n  LocalStoreEnum,\n} from '@hub-center/hub-service/storage';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private localStorageService: LocalStorageService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const currentManager = JSON.parse(\n      this.localStorageService.getItem(LocalStoreEnum.CUSTOMER_KEY)!\n    );\n    const accessToken = localStorage.getItem(LocalStoreEnum.ACCESS_TOKEN)!;\n    if (currentManager && accessToken) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":";;;;;;;;MAYa,cAAc,CAAA;AACzB,IAAA,WAAA,CAAoB,MAAc,EAAA;QAAd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KAAI;IAEtC,SAAS,CACP,OAA6B,EAC7B,IAAiB,EAAA;AAEjB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,GAAG,CAAC,CAAC,KAAqB,KAAI;YAC5B,IAAI,KAAK,YAAY,YAAY,EAAE;gBACjC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,KAAK,EAAE;oBAClC,MAAM,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAC/C,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KAAI;AACjB,YAAA,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClC,aAAA;YAED,OAAO,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7C,CAAC,CACH,CAAC;KACH;+EAvBU,cAAc,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAd,IAAA,SAAA,IAAA,CAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,cAAc,WAAd,cAAc,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA;;uFAAd,cAAc,EAAA,CAAA;cAD1B,UAAU;;;ACXX;MAea,gBAAgB,CAAA;AAC3B,IAAA,WAAA,CAAoB,mBAAwC,EAAA;QAAxC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAAI;IAEhE,SAAS,CACP,OAA6B,EAC7B,IAAiB,EAAA;AAEjB,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAC/B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAE,CAC/D,CAAC;QACF,MAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAE,CAAC;QACvE,IAAI,cAAc,IAAI,WAAW,EAAE;AACjC,YAAA,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;AACtB,gBAAA,UAAU,EAAE;oBACV,aAAa,EAAE,CAAU,OAAA,EAAA,WAAW,CAAE,CAAA;AACvC,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC7B;iFApBU,gBAAgB,EAAA,EAAA,CAAA,QAAA,CAAAA,IAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,gBAAgB,WAAhB,gBAAgB,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA;;uFAAhB,gBAAgB,EAAA,CAAA;cAD5B,UAAU;;;ACdX;;AAEG;;;;"}